(defcfg
  input (iokit-name "Apple Internal Keyboard / Trackpad")
  output (kext)
  fallthrough true
  allow-cmd true
)

(defalias
    cpy M-c
    pst M-v
    cut M-x
    _a (tap-hold-next-release 200 a lctl)
    _u (tap-hold-next-release 200 u lmet)
    _e (tap-hold-next-release 200 e lalt)
    _o (tap-hold-next-release 200 o lsft)

    _h (tap-hold-next-release 200 h rmet)
    _t (tap-hold-next-release 200 t ralt)
    _n (tap-hold-next-release 200 n lsft)
)

(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft up
  fn   lctl lalt lmet           spc            rmet ralt left down rght
)

;; Below, I use `around' to compose `layer-toggle' with `fn' (instead
;; of using `layer-toggle' directly) so that the `fn' keypress
;; actually gets emitted. This matters when using an application that
;; can use `fn' as a modifier (like Emacs).
(defalias fn (around (layer-toggle function) fn))


(defalias spc (tap-hold 250 spc (layer-toggle navigation)))


;; Dvorak
(deflayer default
  esc  brdn brup lp   mctl bldn blup prev pp   next mute vold volu
  grv  1    2    3    4    5    6    7    8    9    0    [    ]    bspc
  tab  '    ,    .    p    y    f    g    c    r    l    /    =    \
  ret  @_a  @_o  @_e  @_u  i    d    @_h  @_t  @_n   s    -   ret
  lsft ;    q    j    k    x    b    m    w    v    z    rsft up
  @fn  lctl lalt lmet           @spc           rmet ralt left down rght
)

(deflayer navigation
  _    _    _    _    _    _    _   _    _      _     _   _  _
  _    _    _    _    _    _    _   _    _      _     _   _  _  _
  _    _    @cut @cpy @pst _    _   home up     end   _   _  _  _
  _    _    lsft lalt lmet _    _   left down   right _   _  _
  _    _    _    _    _    _    _   bspc delete _     _   _  _
  _    _    _    _              _               _     _   _  _  _
)

(deflayer function
  _    f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12 
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _              _              _    _    _    _    _
)
